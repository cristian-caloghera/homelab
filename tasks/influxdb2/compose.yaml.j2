services:
  influxdb:
    image: influxdb:2
    container_name: influxdb2
    # the magic uid:gid is appdata user from the nfs server
    # as the influxdb files are stored on depozit backed storage
    user: 10001:10001
    restart: unless-stopped
    ports:
      - 8086:8086
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME_FILE: /run/secrets/influxdb2-admin-username
      DOCKER_INFLUXDB_INIT_PASSWORD_FILE: /run/secrets/influxdb2-admin-password
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN_FILE: /run/secrets/influxdb2-admin-token
      DOCKER_INFLUXDB_INIT_ORG: {{ influxdb2_org }}
      DOCKER_INFLUXDB_INIT_BUCKET: ww29
    networks:
      - reverse_proxy_net
      - home_metrics
    secrets:
      - influxdb2-admin-username
      - influxdb2-admin-password
      - influxdb2-admin-token
    volumes:
      - type: volume
        source: influxdb2-data
        target: /var/lib/influxdb2
        volume:
          nocopy: true
      - type: volume
        source: influxdb2-config
        target: /etc/influxdb2
        volume:
          nocopy: true
      - type: volume
        source: influxdb2-backup
        target: /var/lib/influxdb2-backup
networks:
  reverse_proxy_net:
    external: true
  home_metrics:
    external: true
secrets:
  influxdb2-admin-username:
    file: ./secrets/.env.influxdb2-admin-username
  influxdb2-admin-password:
    file: ./secrets/.env.influxdb2-admin-password
  influxdb2-admin-token:
    file: ./secrets/.env.influxdb2-admin-token
volumes:
  influxdb2-data:
    driver: local
    driver_opts:
      type: nfs
      o: addr={{ nfs_server }},rw,vers=4.2
      device: "{{ nfs_path }}/data"
  influxdb2-config:
    driver: local
    driver_opts:
      type: nfs
      o: addr={{ nfs_server }},rw,vers=4.2
      device: "{{ nfs_path }}/config"
  influxdb2-backup:
    driver: local
    driver_opts:
      type: nfs
      o: addr={{ nfs_server }},rw,vers=4.2
      device: "{{ nfs_path }}/backup"
